<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:xFrameButtons="clr-namespace:xFrame.WPF.Controls.Inputs"
                    xmlns:xFrame="xFrame/Wpf">

    <Style TargetType="{x:Type xFrameButtons:Button}" x:Key="BaseStyle">
        <Setter Property="Background" Value="{DynamicResource ResourceKey={x:Static xFrame:DefaultThemeKeys.ControlBackgroundColorBrush}}"/>
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey={x:Static xFrame:DefaultThemeKeys.ForegroundColorBrush}}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ResourceKey={x:Static xFrame:DefaultThemeKeys.BorderColorBrush}}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="CornerRadius" Value="5"/>
        <Setter Property="Padding" Value="15,5"/>
        <Setter Property="BorderThickness" Value="1"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xFrameButtons:Button}">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Margin="{TemplateBinding Margin}"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            UseLayoutRounding="True"
                            SnapsToDevicePixels="True"
                            x:Name="OuterBorder">

                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          TextBlock.Foreground="{TemplateBinding Foreground}"
                                          TextBlock.FontSize="{TemplateBinding FontSize}"
                                          TextBlock.FontFamily="{TemplateBinding FontFamily}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ResourceKey={x:Static xFrame:DefaultThemeKeys.HoverColorBrush}}"/>

                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ResourceKey={x:Static xFrame:DefaultThemeKeys.ButtonPressedColorBrush}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource ResourceKey={x:Static xFrame:DefaultThemeKeys.ForegroundDisabeldColorBrush}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource ResourceKey={x:Static xFrame:DefaultThemeKeys.ForegroundDisabeldColorBrush}}"/>
                            <Setter Property="Background" Value="{DynamicResource ResourceKey={x:Static xFrame:DefaultThemeKeys.ButtonPressedColorBrush}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type xFrameButtons:Button}" 
           BasedOn="{StaticResource BaseStyle}"/>
    
    <Style TargetType="{x:Type xFrameButtons:Button}" 
           BasedOn="{StaticResource BaseStyle}" 
           x:Key="AccentButton">
        <Setter Property="Background" Value="{DynamicResource ResourceKey={x:Static xFrame:DefaultThemeKeys.AccentColorBrush}}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource AccentColorLighten10Brush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource AccentColorLighten10Brush}"/>

            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource AccentColorBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource AccentColorDarken30Brush}"/>
            </Trigger>
            
        </Style.Triggers>
    </Style>

</ResourceDictionary>